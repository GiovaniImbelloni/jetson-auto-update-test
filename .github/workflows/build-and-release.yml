name: Build and Release ServicoTeste (ARM64)

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout do código
        uses: actions/checkout@v3

      - name: Obter última versão publicada
        id: get_latest_version
        run: |
          latest_tag=$(curl -sSL -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/GiovaniImbelloni/jetson-auto-update-test/releases/latest" | \
            grep "tag_name" | cut -d '"' -f 4)

          if [[ -z "$latest_tag" ]]; then
            latest_tag="v1.0"
          else
            version_number=$(echo $latest_tag | sed 's/v//')
            new_version=$(echo "$version_number + 0.1" | bc)
            latest_tag="v$new_version"
          fi

          echo "VERSION=$latest_tag" >> $GITHUB_ENV

      - name: Rodar container compatível com a Jetson Nano
        run: |
          docker run --rm -v $(pwd):/src -w /src ubuntu:18.04 /bin/bash -c "
          apt update &&
          apt install -y build-essential gcc-8 g++-8 &&
          apt install -y gcc-aarch64-linux-gnu g++-aarch64-linux-gnu &&
          export CC=aarch64-linux-gnu-gcc-8 &&
          export CXX=aarch64-linux-gnu-g++-8 &&
          make
          "

      - name: Criar Release numerada
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.VERSION }}
          files: servico_teste
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Criar Release "latest"
        uses: softprops/action-gh-release@v1
        with:
          tag_name: servico_teste-latest
          files: servico_teste
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

